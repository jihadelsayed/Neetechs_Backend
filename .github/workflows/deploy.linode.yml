name: Deploy Django to Linode

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.SSH_PORT_LINODE }}" "${{ secrets.SSH_HOST_LINODE }}" >> ~/.ssh/known_hosts

      - name: Remote deploy
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_HOST_LINODE }}
          username: ${{ secrets.SSH_USER_LINODE }}
          port: ${{ secrets.SSH_PORT_LINODE }}
          key: ${{ secrets.SSH_KEY_LINODE }}
          script_stop: true
          script: |
            set -Eeuo pipefail
            cd /srv/neetechs/app

            # ensure .env is unix format (prevents parsing garbage)
            command -v dos2unix >/dev/null 2>&1 && dos2unix .env || true

            git pull --ff-only
            # venv
            source /srv/neetechs/env/bin/activate || (python3 -m venv /srv/neetechs/env && source /srv/neetechs/env/bin/activate)
            python -m pip install --upgrade pip wheel
            [ -f requirements.linux.txt ] && python -m pip install -r requirements.linux.txt --upgrade

            # SAFE env load (don’t use grep|xargs)
            set -a; source .env; set +a

            # quick DB probe (won’t print secrets)
            if [ -n "${DATABASE_URL:-}" ]; then
              psql "$DATABASE_URL" -c "select 1;" >/dev/null
            else
              export PGPASSWORD="$DB_PASSWORD"
              psql -h "${DB_HOST:-127.0.0.1}" -U "$DB_USER" -d "$DB_NAME" -p "${DB_PORT:-5432}" -c "select 1;" >/dev/null
            fi

            python manage.py migrate --noinput -v 2
            python manage.py collectstatic --noinput
            deactivate

            # non-interactive restart (requires sudoers drop-in)
            sudo -n systemctl restart gunicorn-neetechs
